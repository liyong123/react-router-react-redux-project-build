{"version":3,"sources":["component/Home/Table.js","component/Home/Form.js","component/Home/Home.js","component/Detail/Detail.js","component/NoMatch.js","component/ApiTest/ApiTest.js","component/Layout/Layout.js","actions/index.js","containers/FilterLink.js","actions/actionType.js","components/Footer.js","containers/AddTodo.js","components/Todo.js","containers/VisibleTodoList.js","components/App.js","router.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/todos.js","reducers/visibilityFilter.js","reducers/asyncReducer.js","actions/asyncActionType.js","reducers/index.js","configureStore.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","_this$props","this","props","characterData","removeCharacter","map","item","index","key","Math","random","name","job","onClick","Component","Table","_this$props2","Table_TableHeader","Table_TableBody","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","onFormSubmit","preventDefault","handleSubmit","state","iniitialState","_this$state","onSubmit","type","onChange","Home","characters","filter","ca","i","character","concat","toConsumableArray","className","Home_Table","Home_Form","Detail","match","params","id","NoMatch","ApiTest","data","_this2","fetch","then","result","json","Layout","children","nextTodoId","VisibilityFilters","FilterLink","active","disabled","style","marginLeft","backgroundColor","connect","ownProps","visibilityFilter","dispatch","Footer","containers_FilterLink","AddTodo","getValue","addTodo","inputDom","trim","console","log","offsetHeight","getValueTest","ref","input","text","Todo","completed","textDecoration","getVisibleTodos","todos","t","Error","VisibleTodoList","toggleTodo","todo","components_Todo","assign","App","containers_AddTodo","containers_VisibleTodoList","components_Footer","Router","store","HashRouter","Switch","es","Route","path","render","component_Layout_Layout","exact","component","monitorReducerEnhancer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","logger","next","info","getState","groupEnd","arguments","length","undefined","objectSpread","SHOW_ALL","asyncReducer","combineReducers","postsBySubreddit","subreddit","isFetching","didInvalidate","items","posts","lastUpdated","receivedAt","selectedSubreddit","configureStore","preloadedState","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","apply","monitorReducersEnhancer","composedEnhancers","composeWithDevTools","rootReducer","ReactDOM","router","document","getElementById"],"mappings":"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","file":"static/js/main.8c188fe9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n//函数式组件\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Job</th>\r\n                <th>Remove</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n};\r\n//类组件\r\nclass TableBody extends Component {\r\n     render () {\r\n         const { characterData,removeCharacter } = this.props;\r\n         return (\r\n             <tbody>\r\n             {\r\n                 characterData.map((item,index)=>{\r\n                     return (\r\n                         <tr key={Math.random()+index}>\r\n                             <td>{item.name}</td>\r\n                             <td>{item.job}</td>\r\n                             <td><button onClick={()=>{removeCharacter(index)}}>delete</button></td>\r\n                         </tr>\r\n                     )\r\n                 })\r\n             }\r\n             </tbody>\r\n         )\r\n     }\r\n}\r\n//函数式组件\r\n/*const TableBody = props => {\r\n    const rows = props.characterData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td><button onClick={() => props.removeCharacter(index)}>Delete</button></td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    return <tbody>{rows}</tbody>;\r\n};*/\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        const { characterData, removeCharacter } = this.props;\r\n\r\n        return (\r\n            <table>\r\n                <TableHeader />\r\n                <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import React, {Component} from 'react';\r\n\r\n/*class Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.initialState = {\r\n            name: '',\r\n            job: ''\r\n        };\r\n\r\n        this.state = this.initialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.initialState);\r\n    };\r\n\r\n    render() {\r\n        const { name, job } = this.state; \r\n\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <label>Name</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange} />\r\n                <label>Job</label>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange} />\r\n                <button type=\"submit\">\r\n                    Submit\r\n                </button>\r\n            </form>\r\n        );\r\n    }\r\n}*/\r\n\r\n\r\nclass Form extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.iniitialState = {\r\n            name:'',\r\n            job:''\r\n        };\r\n        this.state = this.iniitialState;\r\n    }\r\n\r\n    handleChange = event => {\r\n       const { name, value } = event.target;\r\n       this.setState({\r\n           [name]:value\r\n       })\r\n    };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.handleSubmit(this.state);\r\n        this.setState(this.iniitialState);\r\n    };\r\n\r\n    render () {\r\n        const { name , job } = this.state;\r\n        return (\r\n            <form onSubmit={this.onFormSubmit}>\r\n                <label>Name:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <label>Job:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"job\"\r\n                    value={job}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <button type=\"submit\">\r\n                    submit\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport Table from './Table';\r\nimport Form from './Form';\r\n\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        characters: []\r\n    };\r\n\r\n    /*removeCharacter = index => {\r\n        const { characters } = this.state;\r\n    \r\n        this.setState({\r\n            characters: characters.filter((character, i) => { \r\n                return i !== index;\r\n            })\r\n        });\r\n    };*/\r\n\r\n    removeCharacter = (index) => {\r\n      const { characters } = this.state;\r\n      this.setState({\r\n          characters:characters.filter((ca,i)=>{\r\n              return i !== index;\r\n          })\r\n      })\r\n    };\r\n\r\n\r\n    handleSubmit = character => {\r\n        this.setState({characters: [...this.state.characters, character]});\r\n    };\r\n\r\n    render() {\r\n        const { characters } = this.state;\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <h1>React Tutorial</h1>\r\n                <p>Add a character with a name and a job to the table.</p>\r\n                <Table\r\n                    characterData={characters}\r\n                    removeCharacter={this.removeCharacter}\r\n                />\r\n                <h3>Add New</h3>\r\n                <Form handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React , {Component} from 'react';\r\n\r\nclass Detail extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <span>这是detail页面</span>\r\n                <span>\r\n                    {this.props.match.params.id != null ? \"，id为\"+this.props.match.params.id:null}\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Detail","import React , {Component} from 'react';\r\n\r\nclass NoMatch extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                页面没找到\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NoMatch","import React, { Component } from 'react';\r\n\r\nclass ApiTest extends Component {\r\n    state = {\r\n        data:[]\r\n    };\r\n    componentDidMount(){\r\n        /*const url = \"https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*&limit=1\";*/\r\n        fetch('./json/test.json')\r\n            .then(result => {\r\n                return result.json()\r\n            })\r\n            .then(result=>{\r\n                this.setState({\r\n                    data:result\r\n                })\r\n            })\r\n    }\r\n    render () {\r\n        const { data } = this.state;\r\n        return (\r\n            <div className=\"container\">\r\n                <ul>\r\n                    {\r\n                        data.map((item,index)=>{\r\n                            return <li key={index + Math.random()}>{item}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ApiTest;","import React , {Component} from 'react';\r\n\r\nclass Layout extends Component {\r\n    render () {\r\n        return (\r\n            <div>\r\n                <div>layout</div>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import { ADD_TODO, SET_VISIBILITY_FILTER ,TOGGLE_TODO } from './actionType'\n\nlet nextTodoId = 0;\nexport const addTodo = text => ({\n  type: ADD_TODO,\n  id: nextTodoId++,\n  text\n});\n\nexport const setVisibilityFilter = filter => ({\n  type: SET_VISIBILITY_FILTER,\n  filter\n});\n\nexport const toggleTodo = id => ({\n  type: TOGGLE_TODO,\n  id\n});\n\nexport const VisibilityFilters = {\n  SHOW_ALL: 'SHOW_ALL',\n  SHOW_COMPLETED: 'SHOW_COMPLETED',\n  SHOW_ACTIVE: 'SHOW_ACTIVE'\n};\n","import React, {Component} from \"react\";\nimport { connect } from 'react-redux'\nimport { setVisibilityFilter } from '../actions'\n\nclass FilterLink extends Component {\n    render () {\n        const { active, onClick} = this.props;\n        return (\n            <button\n                onClick={onClick}\n                disabled={active}\n                style={{\n                    marginLeft: '4px',\n                    backgroundColor: active ? '#ccc' : '#0366EE'\n                }}\n            >\n                {this.props.children}\n            </button>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  active: ownProps.filter === state.visibilityFilter\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FilterLink)\n","export const ADD_TODO = 'ADD_TODO';\r\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER';\r\nexport const TOGGLE_TODO = 'TOGGLE_TODO';","import React , { Component } from 'react'\nimport FilterLink from '../containers/FilterLink'\nimport { VisibilityFilters } from '../actions'\n\nclass Footer extends Component {\n\n    render () {\n        return (\n            <div>\n                <span>Show: </span>\n                <FilterLink filter={VisibilityFilters.SHOW_ALL}>\n                    All\n                </FilterLink>\n                <FilterLink filter={VisibilityFilters.SHOW_ACTIVE}>\n                    Active\n                </FilterLink>\n                <FilterLink filter={VisibilityFilters.SHOW_COMPLETED}>\n                    Completed\n                </FilterLink>\n            </div>\n        )\n    }\n}\n\nexport default Footer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addTodo } from '../actions'\n\n/*const AddTodo = ({ dispatch }) => {\n  let input;\n\n  return (\n    <div>\n      <form onSubmit={e => {\n        e.preventDefault();\n        if (!input.value.trim()) {\n          return\n        }\n        dispatch(addTodo(input.value));\n        input.value = ''\n      }}>\n        <input ref={node => input = node} />\n        <button type=\"submit\">\n          Add Todo\n        </button>\n      </form>\n    </div>\n  )\n};*/\n\nclass AddTodo extends Component {\n\n    getValue = event => {\n        event.preventDefault();\n        const { addTodo } = this.props;\n\n        if (!this.inputDom.value.trim()) {\n            return\n        }\n        console.log(this.inputDom.offsetHeight);\n        addTodo(this.inputDom.value);\n        this.inputDom.value = ''\n    };\n    getValueTest = event => {\n        event.preventDefault();\n        console.log(event.target.name + ':' + event.target.value)\n    };\n    render () {\n\n      return (\n          <div>\n              <form onSubmit={ this.getValue}>\n                  <input  name='inputTest'\n                          onChange={ this.getValueTest }\n                          ref={\n                            input => {\n                              this.inputDom = input\n                          }}\n                  />\n                  <button type=\"submit\">\n                      Add Todo\n                  </button>\n              </form>\n          </div>\n      )\n    }\n}\n\nconst mapStateToProps = state => ({\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    addTodo: value => dispatch(addTodo(value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTodo)\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types';\n\nclass Todo extends Component {\n    render () {\n\n        const { onClick, completed, text , id} = this.props;\n        return (\n            <li\n                onClick={onClick}\n                style={{textDecoration: completed ? 'line-through' : 'none'}}>\n                {text + id}\n            </li>\n        )\n    }\n}\n\nTodo.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n  text: PropTypes.string.isRequired\n};\n\nexport default Todo\n","import React,{Component} from \"react\";\nimport { connect } from 'react-redux'\nimport Todo from '../components/Todo'\nimport { toggleTodo, VisibilityFilters } from '../actions'\n\nconst getVisibleTodos = (todos, filter) => {\n  switch (filter) {\n    case VisibilityFilters.SHOW_ALL:\n      return todos;\n    case VisibilityFilters.SHOW_COMPLETED:\n      return todos.filter(t => t.completed);\n    case VisibilityFilters.SHOW_ACTIVE:\n      return todos.filter(t => !t.completed);\n    default:\n      throw new Error('未知的 filter: ' + filter)\n  }\n};\n\nclass VisibleTodoList extends Component {\n    render () {\n        const { todos, toggleTodo } = this.props;\n        return (\n            <ul>\n                {todos.map(todo =>(\n                        <Todo\n                            key={todo.id}\n                            {...todo}\n                            onClick={() => toggleTodo(todo.id)}\n                        />\n                    )\n                )}\n            </ul>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => ({\n  todos: getVisibleTodos(state.todos, state.visibilityFilter)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  toggleTodo: id => dispatch(toggleTodo(id))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(VisibleTodoList)\n","import React , {Component} from 'react'\nimport Footer from './Footer'\nimport AddTodo from '../containers/AddTodo'\nimport VisibleTodoList from '../containers/VisibleTodoList'\n\nclass App extends Component {\n    render () {\n\n        return (\n            <div>\n                <AddTodo />\n                <VisibleTodoList />\n                <Footer />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React ,{Component} from 'react';\r\nimport  { HashRouter, Route, Switch } from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport Home from './component/Home/Home.js';\r\nimport Detail from './component/Detail/Detail.js';\r\nimport NoMatch from './component/NoMatch.js';\r\nimport ApiTest from './component/ApiTest/ApiTest.js';\r\nimport Layout from './component/Layout/Layout.js';\r\nimport App from './components/App.js';\r\n\r\nclass Router extends  Component {\r\n    render () {\r\n        const { store } = this.props;\r\n        return (\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Provider  store={store}>\r\n                        <Route path=\"/\" render={props => (\r\n                            <Layout >\r\n                                <Switch>\r\n                                    <Route exact path='/' component={Home} />\r\n                                    <Route exact path='/detail' component={Detail} />\r\n                                    <Route exact path='/detail/:id' component={Detail} />\r\n                                    <Route exact path='/apiTest' component={ApiTest} />\r\n                                    <Route exact path='/app/:filter?' component={App} />\r\n                                    {/*<Route render={() => <Redirect to=\"/\" />} />*/}\r\n                                    <Route exact component={NoMatch} />\r\n                                </Switch>\r\n                            </Layout>\r\n                        )}\r\n                        />\r\n                    </Provider>\r\n                    {/*当路由错误时，返回\"/\"路由*/}\r\n                   {/* <Route render={() => <Redirect to=\"/\" />} />*/}\r\n                </Switch>\r\n            </HashRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Router","//一个记录 reducer 处理每个 action 所用时间的 enhancer(增强剂)。\r\nconst round = number => Math.random(number * 100) / 100;\r\nconst monitorReducerEnhancer = createStore => (\r\n    reducer,\r\n    initialState,\r\n    enhancer\r\n) => {\r\n   const monitoredReducer = (state, action) => {\r\n       const start = performance.now();\r\n       const newState = reducer(state, action);\r\n       const end = performance.now();\r\n       const diff = round(end - start);\r\n\r\n       console.log('reducer process time:', diff);\r\n\r\n       return newState\r\n   };\r\n\r\n   return createStore(monitoredReducer, initialState, enhancer)\r\n};\r\n\r\nexport default monitorReducerEnhancer","//此middleware 记录 dispatch 的 action 和得到的新 state 。\r\nconst logger = store => next => action => {\r\n    console.log(action.type);\r\n    console.info(\"dispatching:\", action);\r\n    let result = next(action);\r\n    console.log(\"next state\", store.getState());\r\n    console.groupEnd();\r\n    return result\r\n};\r\n\r\nexport default logger","import { ADD_TODO, TOGGLE_TODO } from '../actions/actionType'\n\nconst todos = (state = [], action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return [\n        ...state,\n        {\n          id: action.id,\n          text: action.text,\n          completed: false\n        }\n      ];\n    case TOGGLE_TODO:\n      return state.map(todo =>\n        (todo.id === action.id)\n          ? {...todo, completed: !todo.completed}\n          : todo\n      );\n    default:\n      return state\n  }\n};\n\nexport default todos\n","import { VisibilityFilters } from '../actions';\nimport { SET_VISIBILITY_FILTER } from \"../actions/actionType\";\n\nconst { SHOW_ALL } = VisibilityFilters;\n\nconst visibilityFilter = (state = SHOW_ALL, action) => {\n  switch (action.type) {\n    case SET_VISIBILITY_FILTER:\n      return action.filter;\n    default:\n      return state\n  }\n};\n\nexport default visibilityFilter\n","import { combineReducers } from 'redux'\r\nimport {\r\n    SELECT_SUBREDDIT, INVALIDATE_SUBREDDIT,\r\n    REQUEST_POSTS, RECEIVE_POSTS\r\n} from '../actions/asyncActionType'\r\n\r\nconst selectedSubreddit = (state = 'reactjs', action) => {\r\n    switch (action.type) {\r\n        case SELECT_SUBREDDIT:\r\n            return action.subreddit;\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst posts = (state = {\r\n    isFetching: false,\r\n    didInvalidate: false,\r\n    items: []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case INVALIDATE_SUBREDDIT:\r\n            return {\r\n                ...state,\r\n                didInvalidate: true\r\n            };\r\n        case REQUEST_POSTS:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n                didInvalidate: false\r\n            };\r\n        case RECEIVE_POSTS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                didInvalidate: false,\r\n                items: action.posts,\r\n                lastUpdated: action.receivedAt\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst postsBySubreddit = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case INVALIDATE_SUBREDDIT:\r\n        case RECEIVE_POSTS:\r\n        case REQUEST_POSTS:\r\n            return {\r\n                ...state,\r\n                [action.subreddit]: posts(state[action.subreddit], action)\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nconst asyncReducer = combineReducers({\r\n    postsBySubreddit,\r\n    selectedSubreddit\r\n});\r\n\r\nexport default asyncReducer\r\n","export const REQUEST_POSTS = 'REQUEST_POSTS';\r\nexport const RECEIVE_POSTS = 'RECEIVE_POSTS';\r\nexport const INVALIDATE_SUBREDDIT = 'INVALIDATE_SUBREDDIT';\r\nexport const SELECT_SUBREDDIT = 'SELECT_SUBREDDIT';","import { combineReducers } from 'redux'\nimport todos from './todos'\nimport visibilityFilter from './visibilityFilter'\nimport asyncReducer from './asyncReducer'\n\nexport default combineReducers({\n    todos,\n    visibilityFilter,\n    asyncReducer\n})\n","import { applyMiddleware, createStore } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\n/*import { createLogger } from 'redux-logger'*/\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport monitorReducersEnhancer from './enhancers/monitorReducer'\r\nimport loggerMiddleware from './middleware/logger'\r\nimport rootReducer from './reducers'\r\n\r\nconst configureStore = (preloadedState) => {\r\n\r\n    const middlewares = [loggerMiddleware, thunkMiddleware];\r\n    /*if(process.env.NODE_ENV !== 'production') {\r\n        middlewares.push(createLogger())//记录action及state\r\n    }*/\r\n    const middlewareEnhancer = applyMiddleware(...middlewares);\r\n    const enhancers = [middlewareEnhancer, monitorReducersEnhancer];\r\n    const composedEnhancers = composeWithDevTools(...enhancers);\r\n    const store = createStore(rootReducer, preloadedState, composedEnhancers);\r\n\r\n    /*reducer 热加载*/\r\n    /*if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n        module.hot.accept('./reducers', () => store.replaceReducer(rootReducer))\r\n    }*/\r\n\r\n    return store;\r\n\r\n\r\n};\r\n\r\nexport default configureStore\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Root from './router';\r\nimport configureStore from './configureStore'\r\nimport './index.css';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(<Root  store={store} />, document.getElementById('root'));"],"sourceRoot":""}